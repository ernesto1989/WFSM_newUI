<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WF Scenario Manager</title>
    <link rel="stylesheet" type="text/css" href="https://rawgit.com/vitmalina/w2ui/master/dist/w2ui.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-uWxY/CJNBR+1zjPWmfnSnVxwRheevXITnMqoEIeG1LJrdI0GlVs/9cVSyPYXdcSF" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-kQtW33rZJAHjgefvhyyzcGF3C5TFyBQBA13V1RKPf4uH+bwyzQxZ6CmMZHmNBEfJ" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <script src="/w2ui.js" type="module"></script>
    <style>
        html,
        body{
            height: 100%;
        }
        
        .container-fluid {
            height:93%
        }

        #contenido {
            margin:auto;
            width: 98%;
            height: 98%;
            padding: 2px;
        }

        
    </style>
    <script type="module">
        
        import { w2tabs, w2sidebar, query,  w2form, w2ui, w2popup, w2alert, w2grid, w2toolbar,w2confirm } from 'https://rawgit.com/vitmalina/w2ui/master/dist/w2ui.es6.min.js'

        let scenarios = new Map();
        let form;
        let dform;
        let details_grid;
        let selected_scenario;

        const socket = new WebSocket('ws://localhost:3000?userId=<%=user_info.username%>');

        socket.onopen = function(){
            console.log('Connected to server');
        }

        socket.addEventListener("message",function(e){
            //alert("Server says: " + event.data);
            let message = JSON.parse(e.data)
            if(message.action === 'update_scenario'){
                updateScenario(message.scenario_id);
            }
        });

        $("document").ready(function(){            
            let scenario;
            <%for(let i = 0; i<scenarios_list.length;i++){%>
                scenario = {
                    scenario_id:'<%=scenarios_list[i].scenario_id%>',
                    cdate: '<%=scenarios_list[i].cdate%>',
                    description: '<%=scenarios_list[i].description%>',
                    origin_id: '<%=scenarios_list[i].origin_id%>',
                    type: <%=scenarios_list[i].type%>,
                    description_type: '<%=scenarios_list[i].description_type%>',
                    nodes: '<%=scenarios_list[i].nodes%>',
                    flows: '<%=scenarios_list[i].flows%>',
                    recalc_trl : <%=scenarios_list[i].recalc_trl%>,
                    calc_solution : <%=scenarios_list[i].recalc_solution%>,
                    Proposed_Solution: '<%=scenarios_list[i].Proposed_Solution%>',
                    Optimal_Solution: '<%=scenarios_list[i].Optimal_Solution%>',
                    capacity_units:'<%=scenarios_list[i].capacity_units%>',
                    time_units:'<%=scenarios_list[i].time_units%>'
                };
                scenarios.set('<%=scenarios_list[i].scenario_id%>',scenario)
            <%}%>
            //AS part of a general (and implementable) solution.... <%=base_scenario%> will always reflects the current situation.
            sidebar.select("<%=base_scenario%>"); // SELECT <%=base_scenario%> at the beginning.
            selected_scenario = {scenario_id: ''};
            showScenario("<%=base_scenario%>");
        });

        function updateScenario(scenarioId){
            let scenario = {scenario_id:scenarioId}
            $.post('/WF/api/getScenario', scenario, function(respuesta){
                let s = respuesta.records.scenario_details[0];
                scenarios.set(s.scenario_id,s);
                if(selected_scenario.scenario_id === s.scenario_id){
                    selected_scenario = s; // actualiza el scenario seleccionado.
                    setForm(s);
                    setDetails(s);
                }
            });
        }

        /**
         * Function that sets a scenario in the form.
         * It receives a scenario and sets the form with the scenario data.
         */
        function setForm(scenario){
            form.record = scenario;
            form.refresh();
        }

        function setDetails(s){
           
            let details = [
                {element:'Nodes',number: `<a href="javascript:window.open('/WF/nodes/${s.scenario_id}','nodes_${s.scenario_id}','toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=950,height=550');">${s.nodes}</a>`},
                {element:"Flows",number: `<a href="javascript:window.open('/WF/flows/${s.scenario_id}','flows_${s.scenario_id}','toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=1050, height=650');">${s.flows}</a>`},
                //{element:"Current State",number:`<a href="javascript:window.open('/WF/simulator/${s.scenario_id}','simulator','toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=1050, height=950');">${s.Proposed_Solution}</a>`},
                //{element:"Optimal Solution",number:`<a href="javascript:window.open('/WF/solution/${s.scenario_id}','solution','toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=1050, height=950');">${s.Optimal_Solution}</a>`}
            ]; 

            if(s.recalc_trl === 1 && s.Proposed_Solution === 'Uncomputed' ){
                //has not been computed yet.
                details.push({element:"Current State",number:`<a href="javascript:window.open('/WF/simulator/${s.scenario_id}','simulator_${s.scenario_id}','toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=1050, height=950');">${s.Proposed_Solution}</a>`});
            }
            
            if(s.recalc_trl === 1 && s.Proposed_Solution === 'Simulated'){
                //needs to be recomputed.
                details.push({element:"Current State",number:`<a href="javascript:window.open('/WF/simulator/${s.scenario_id}','simulator_${s.scenario_id}','toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=1050, height=950');">Req. Update</a>`});
            }
            
            if(s.recalc_trl === 0){
                //doesnt need to be recomputed.
                details.push({element:"Current State",number:`<a href="javascript:window.open('/WF/simulator/${s.scenario_id}','simulator_${s.scenario_id}','toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=1050, height=950');">${s.Proposed_Solution}</a>`});
            }


            if(s.calc_solution === 1){
                details.push({element:"Optimal Solution",number:`<a href="javascript:window.open('/WF/solution/${s.scenario_id}','solution_${s.scenario_id}','toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=1050, height=950');">Uncomputed</a>`});
            }else{
                details.push({element:"Optimal Solution",number:`<a href="javascript:window.open('/WF/solution/${s.scenario_id}','solution_${s.scenario_id}','toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=1050, height=950');">${s.Optimal_Solution}</a>`});
            }

            details_grid.records = details;
            details_grid.refresh();
        }

        /**
         * Method that receives an ID and displays the scenario with certain ID in the form and the details grid.
         * 
         * Right now, it gets the scenario from the backend.
         * It could be improved by getting the scenario from the scenarios map.
         */
        function showScenario(scenarioID){
            //let scenario = {scenario_id:scenarioID}
            if(scenarioID !== selected_scenario.scenario_id){
                selected_scenario = scenarios.get(scenarioID);
            }//else{
            setForm(selected_scenario);
            setDetails(selected_scenario);
        }

        /**
         * Method that deletes the selected scenario.
         * It shows a confirmation dialog before deleting the scenario.
         */
        function deleteScenario(){
            let scenario = {'scenario_id':form.record.scenario_id}
            if(scenario.scenario_id === '<%=base_scenario%>'){
                w2alert("Can't delete Base Scenario");
                return;
            }
            w2confirm({
                msg: 'Do you want to delete the following scenario: ' + scenario.scenario_id,
                title: "DELETE SCENARIO",
                width: 450,        // width of the dialog
                height: 220,       // height of the dialog
                btn_yes: {
                    text: 'yes',   // text for yes button (or yes_text)
                    class: 'btn-danger',     // class for yes button (or yes_class)
                    style: 'background-color:red;',     // style for yes button (or yes_style)
                    onClick: null  // callBack for yes button (or yes_callBack)
                },
                btn_no: {
                    text: 'No',    // text for no button (or no_text)
                    class: '',     // class for no button (or no_class)
                    style: '',     // style for no button (or no_style)
                    onClick: null  // callBack for no button (or no_callBack)
                },
                callBack: function(answer){
                    if(answer === 'yes'){
                        $.post('/WF/api/deleteScenario', scenario, function(respuesta){
                            if(respuesta)
                                window.location.reload();
                            else
                                alert("Something went wrong")
                        });
                    } 
                }
            });            
        }

        /**
         * Method that clears the new scenario form.
         * It is called when the user clicks on the reset button.
         */
        function clearNewScenarioForm(){
            let selectedScenario = scenarios.get('<%=base_scenario%>')
            let record = {
                new_scenario_id : '',
                new_description: '',
                new_type: {id:<%=scenario_types[0].id%>,text:'<%=scenario_types[0].desc%>'},
                new_capacity_units  : {id:selectedScenario.capacity_units,text:selectedScenario.capacity_units},
                new_time_units       : {id:selectedScenario.time_units,text:selectedScenario.time_units},
                new_base_scenario : {id:selectedScenario.scenario_id,text:selectedScenario.scenario_id}
            };
            w2ui.scenarioCreator.record = record;
            w2ui.scenarioCreator.disable('new_capacity_units','new_time_units');
            w2ui.scenarioCreator.show('new_base_scenario');
            w2ui.scenarioCreator.refresh();
        }

        /**
         * Method that handles the creation of a new scenario.
         * First, opens a popup with the corresponding Creation Form.
         * It initializes the form and the fields.
         * It also defines the actions for the buttons.
         */
        function openNewScenarioPopup(){
            
            let cForm = new w2form({
                name: 'scenarioCreator',
                style: 'border: 0px; background-color: transparent;',
                fields: [
                    { field: 'new_scenario_id', type: 'text', required: true, editable:true, 
                        html: { label: 'Scenario ID', attr: 'style="width: 100%"; placeholder="Give the Scenario a name" ' }
                    },
                    { field: 'new_description', type: 'textarea', required: false, editable:true, 
                        html: { label: 'Scenario ID', attr: 'style="width: 100%;" placeholder="About this scenario" ' }
                    },
                    { field: 'new_type', type: 'list',
                        html: { label: 'Scenario Type', attr: 'style="width: 100%"' },
                        options: { items: [
                            <% for(let i = 0; i<scenario_types.length;i++){ %>
                            {id:<%=scenario_types[i].id%>,text:'<%=scenario_types[i].desc%>'}, //{id:2,text:'Empty'}
                            <%}%>
                        ]},
                        
                    },
                    { field: 'new_capacity_units', type: 'list',
                        html: { label: 'capacity Units',attr: 'style="width: 100%"' },
                        options: { items: [
                            <% for(let i =0;i<capacity_units.length;i++){%>
                            {id:'<%=capacity_units[i]%>',text:'<%=capacity_units[i]%>'}, //{id:'LTS',text:'LTS'}]
                            <%}%>
                        ]},
                    },
                    { field: 'new_time_units', type: 'list',
                        html: { label: 'Time Units', attr: 'style="width: 100%"' },
                        options: { items: [
                            <% for(let i =0;i<time_units.length;i++){%>
                            {id:'<%=time_units[i]%>',text:'<%=time_units[i]%>'}, //{id:'Days',text:'Days'}
                            <%}%>
                        ]},
                    },
                    { field: 'new_base_scenario', type: 'list',
                        html: { label: 'Base Scenario', attr: 'style="width: 100%"' },
                        options: { items: [
                            <%for(let i = 0; i<scenarios_list.length;i++){%>
                            {id:'<%=scenarios_list[i].scenario_id%>',text:'<%=scenarios_list[i].scenario_id%>'},
                            <%}%>
                        ]},
                    }
                ],
                onChange:function(event){
                    let modifiedField = event.target;

                    if(modifiedField === 'new_base_scenario'){
                        let selectedBaseScenarioId = w2ui.scenarioCreator.record.new_base_scenario;
                        let selectedScenario = scenarios.get(selectedBaseScenarioId.text);
                        w2ui.scenarioCreator.record.new_capacity_units = {id:selectedScenario.capacity_units,text:selectedScenario.capacity_units};
                        w2ui.scenarioCreator.record.new_time_units = {id:selectedScenario.time_units,text:selectedScenario.time_units};
                        w2ui.scenarioCreator.refresh();
                        cForm.show('new_base_scenario');
                    }

                    if(modifiedField === 'new_type'){
                        let selectedType = cForm.record.new_type;
                        
                        if(selectedType.id === 2){
                            //empty
                            cForm.hide('new_base_scenario');
                            w2ui.scenarioCreator.enable('new_capacity_units','new_time_units');
                        }
                        if(selectedType.id === 1){
                            let selectedBaseScenarioId = w2ui.scenarioCreator.record.new_base_scenario;
                            let selectedScenario = scenarios.get(selectedBaseScenarioId.text);
                            w2ui.scenarioCreator.record.new_capacity_units = {id:selectedScenario.capacity_units,text:selectedScenario.capacity_units};
                            w2ui.scenarioCreator.record.new_time_units = {id:selectedScenario.time_units,text:selectedScenario.time_units};
                            w2ui.scenarioCreator.disable('new_capacity_units','new_time_units');
                            w2ui.scenarioCreator.refresh();
                            cForm.show('new_base_scenario');

                        }
                    }
                },
                actions: {
                    Reset() { 
                        clearNewScenarioForm();
                    },
                    Save() { 
                        this.validate(); 
                        let scenario = {
                            scenario_id:cForm.record.new_scenario_id,
                            description:cForm.record.new_description,
                            type:cForm.record.new_type.id,
                            capacity_units: cForm.record.new_capacity_units.id,
                            time_units: cForm.record.new_time_units.id,
                            base_scenario_id: cForm.record.new_base_scenario.id
                        }

                        //post to web service and on return, reload page.
                        $.post('/WF/api/saveScenario', scenario, function(response){
                            if(response)
                                window.location.reload();
                            else
                                alert("Something went wrong")
                        });
                    }
                }
            });
            
            w2popup.open({
                title   : 'New Scenario',
                body    : '<div id="newScenarioForm" style="width: 100%; height: 100%;"></div>',
                style   : 'padding: 15px 0px 0px 0px',
                width   : 400,
                height  : 420,
                showMax : false
            })
            .then((event) => {
                
                w2ui.scenarioCreator.render('#newScenarioForm');
                clearNewScenarioForm();
            });
        }

        form = new w2form({
            box: '#scenario_general_form',
            name: 'scenario_general_form',
            header:"General Information",
            fields: [
                { field: 'scenario_id', type: 'text', required: true, editable:false, 
                    html: { 
                        label: 'Scenario ID', 
                        attr: 'style="width: 100%" readonly' }
                },
                { field: 'origin_id', type: 'text', required: true, 
                    html: {
                        label: 'Base Scenario ID', 
                        attr: 'style="width: 100%" readonly'}
                },
                { field: 'cdate',  type: 'text', required: true, 
                    html: { 
                        label: 'Creation Date', 
                        attr: 'style="width: 100%" readonly' }
                },
                { field: 'description_type', type: 'text', required: true, 
                    html: { 
                        label: 'Scenario Type',                     
                        attr: 'style="width: 100%" readonly' }
                },
                { field: 'description', type: 'textarea', 
                    html: {  label: 'Descr.', attr: ' style=" width: 100%; height: 40px; resize:none;" readonly' }
                }
            ]
        });
            
        details_grid = new w2grid({
            name: 'scenario_details_grid',
            box: '#scenario_details_grid',
            header:"Elements",
            show: { header: true },
            columns: [
                { field: 'element', text: 'Element', size: '50%' },
                { field: 'number', text: 'Total', size: '50%' }
            ]
        });

        let toolbar = new w2toolbar({
            box: '#toolbar',
            name: 'toolbar',
            items: [
                { type: 'button', id: 'home', text: 'Water Flow Scenario Management', icon: 'fa fa-house' },
                { type: 'break' },
                { type: 'button', id: 'new', text: 'Create', icon: 'fa fa-pencil' },
                { type: 'button', id: 'delete', text: 'Delete', icon: 'fa fa-trash'},
                { type: 'button', id: 'map', text: 'Oficial Map', icon: 'fa fa-map' },
                { type: 'spacer' },
                { type: 'menu', id: 'user', text: '<%= user_info.username %>', icon: 'fa fa-user', items:[
                    { type: 'button', id: 'region', text: '<%=user_info.region.name%>', icon: 'fa fa-circle-info' },
                    { type: 'button', id: 'pref', text: 'My Preferences', icon: 'fa fa-user' },
                    { type: 'button', id: 'sout', text: 'Sign Out', icon: 'fa fa-user-slash' }
                ] 
            }],
            onClick(event) {
                
                let selectedOp = event.target;
                
                if(selectedOp === 'home'){
                    window.location.reload();
                }
                if(selectedOp === 'new'){
                    openNewScenarioPopup();
                }
                if(selectedOp === 'delete'){
                    //deleting selected scenario.
                    deleteScenario();
                }
                if(selectedOp === 'map'){
                    window.open('/WF/map','map','toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=1200,height=550');
                }
                if(selectedOp === 'user:pref'){
                    //preferences
                    alert("Preferences");
                }
                if(selectedOp === 'user:region'){
                    //preferences
                    alert("My region is: <%=user_info.region.name%>");
                }
                if(selectedOp === 'user:sout'){
                    window.location.href = '/WF/logout';
                }
            }
        });

        /**
         * Defines the sidebar where user can select the scenario to be displayed.
         */
        let sidebar = new w2sidebar({
            box: '#sidebar',
            name: 'sidebar',
            style:'height:100%;',
            nodes: [
                <% for(let i =0; i<scenarios_list.length;i++){ %>
                { 
                    id: '<%=scenarios_list[i].scenario_id%>', text: '<%=scenarios_list[i].scenario_id%>', icon:"fa fa-house",
                },
                <%}%>
            ],
            onClick:function(evt){
                let id = evt.target;
                let scenario = id;//substrings[0];
                showScenario(scenario);
            }
        });

    </script>
</head>
<body>
    <div class="container-fluid">
        <div class="row" style="height:7%;">
            <div id="toolbar">
            </div>
        </div>
        <div class="row" id="contenido">
            <div class="col-sm-2 col-md-2" id="sidebar" style=" position:relative; padding: 2px; margin-left: -20px; height:100%">
            </div>
            <div class="col-sm-10 col-md-10" id="main-content" style="height: 100%;position:relative;left:10px;">
                <div class="row" style="height: 100%;">
                    <div class="row" style="height: 40%;">
                        <div class="col-sm-6 col-md-6" id="scenario_general_form" style="height: 100%; width:49.5%; margin-right: 1%;"></div>
                        <div class="col-sm-6 col-md-6" id="scenario_details_grid" style="height: 100%; width:49.5%; ">NODES and FLOWS</div>
                    </div>
                    <div class="row" style="height: 60%; margin-top: 5px;">
                        <div class="col-sm-12 col-md-12" id="scenario_filters_grid" style="height: 100%; ">Filters</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>